// Code generated by github.com/ecordell/optgen. DO NOT EDIT.
package spice

import "context"

type SpiceDbOption func(s *Node)

// NewSpiceDbWithOptions creates a new Node with the passed in options set
func NewSpiceDbWithOptions(opts ...SpiceDbOption) *Node {
	s := &Node{}
	for _, o := range opts {
		o(s)
	}
	return s
}

// SpiceDbWithOptions configures an existing Node with the passed in options set
func SpiceDbWithOptions(s *Node, opts ...SpiceDbOption) *Node {
	for _, o := range opts {
		o(s)
	}
	return s
}

// WithId returns an option that can set ID on a Node
func WithId(id string) SpiceDbOption {
	return func(s *Node) {
		s.ID = id
	}
}

// WithPresharedKey returns an option that can set PresharedKey on a Node
func WithPresharedKey(presharedKey string) SpiceDbOption {
	return func(s *Node) {
		s.PresharedKey = presharedKey
	}
}

// WithDatastore returns an option that can set Datastore on a Node
func WithDatastore(datastore string) SpiceDbOption {
	return func(s *Node) {
		s.Datastore = datastore
	}
}

// WithDbName returns an option that can set DbName on a Node
func WithDbName(dbName string) SpiceDbOption {
	return func(s *Node) {
		s.DbName = dbName
	}
}

// WithUri returns an option that can set URI on a Node
func WithUri(uri string) SpiceDbOption {
	return func(s *Node) {
		s.URI = uri
	}
}

// WithGrpcPort returns an option that can set GrpcPort on a Node
func WithGrpcPort(grpcPort int) SpiceDbOption {
	return func(s *Node) {
		s.GrpcPort = grpcPort
	}
}

// WithDispatchPort returns an option that can set DispatchPort on a Node
func WithDispatchPort(dispatchPort int) SpiceDbOption {
	return func(s *Node) {
		s.DispatchPort = dispatchPort
	}
}

// WithHttpPort returns an option that can set HttpPort on a Node
func WithHttpPort(httpPort int) SpiceDbOption {
	return func(s *Node) {
		s.HttpPort = httpPort
	}
}

// WithMetricsPort returns an option that can set MetricsPort on a Node
func WithMetricsPort(metricsPort int) SpiceDbOption {
	return func(s *Node) {
		s.MetricsPort = metricsPort
	}
}

// WithDashboardPort returns an option that can set DashboardPort on a Node
func WithDashboardPort(dashboardPort int) SpiceDbOption {
	return func(s *Node) {
		s.DashboardPort = dashboardPort
	}
}

// WithPid returns an option that can set Pid on a Node
func WithPid(pid int) SpiceDbOption {
	return func(s *Node) {
		s.Pid = pid
	}
}

// WithCancel returns an option that can set Cancel on a Node
func WithCancel(cancel context.CancelFunc) SpiceDbOption {
	return func(s *Node) {
		s.Cancel = cancel
	}
}
